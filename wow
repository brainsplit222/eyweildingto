--[[
    Made with love!
    SigmaBypasser by @minishakk.
]]

-- Variables --

if not game:IsLoaded() then
    game.IsLoaded:Wait()
end

warn("please execute twice, tbh idk why this happens.")

local userLocale = game.LocalizationService.RobloxLocaleId

local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

loadstring(game:HttpGet("https://raw.githubusercontent.com/AnthonyIsntHere/anthonysrepository/main/scripts/AntiChatLogger.lua", true))()

-- Window --

local Window = Rayfield:CreateWindow({
    Name = "SigmaBypasser™ - v3.2",
    LoadingTitle = "SigmaBypasser",
    LoadingSubtitle = "by minishakk",
    DisableRayfieldPrompts = false,
    Theme = "Default",
    ConfigurationSaving = {
        Enabled = true,
        FolderName = nil,
        FileName = "Big Hub"
    },
    Discord = {
        Enabled = true,
        Invite = "https://discord.gg/qrPXKxem4N",
        RememberJoins = true
    },
    KeySystem = false,
    KeySettings = {
        Title = "SigmaBypasser™",
        Subtitle = "Key System",
        Note = "Find key at discord.gg/qrPXKxem4N!",
        FileName = "Key",
        SaveKey = true,
        GrabKeyFromSite = false,
        Key = {"eggsouth"}
    }
})

if userLocale ~= "kk" then
    local newSoundId = "rbxassetid://6655708496"
    local SoundService = game:GetService("SoundService")


    local sound = Instance.new("Sound", SoundService)
    sound.SoundId = newSoundId
    sound.Volume = 1

    sound:Play()

    Rayfield:Notify({
        Title = "Slovenski",
        Content = "This bypass requires you to set your language to Slovenski.",
        Duration = 8.5,
        Image = 4483362458,
        Actions = {
            Ignore = {
                Name = "Okay!",
                Callback = function()
                    warn("This bypass requires you to set your language to Slovenski.")
                end
            }
        }
        
    })    
end

-- Tabs --

local MTab = Window:CreateTab("Main", "box")
local WTab = Window:CreateTab("Words", "text-cursor")
local CTab = Window:CreateTab("Casual", "smile")
local RTab = Window:CreateTab("Rage", "flame")
local RPTab = Window:CreateTab("Roleplay", "corner-up-left")
local STab = Window:CreateTab("Sex", "heart")
local HTab = Window:CreateTab("High", "pill")
local WBTab = Window:CreateTab("Websites", "globe")
local SNTab = Window:CreateTab("Settings", 80983262444378)
local CRTab = Window:CreateTab("Credits", "italic")

-- Content --

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local TextChatService = game:GetService("TextChatService")
local UserInputService = game:GetService("UserInputService")
local player = Players.LocalPlayer
local bypassText = ""
local safeBool = false
local chatBool = true
local autoBool = false
local tagBool = true
local jerkBool = true

local JerkOffSpeed = 16

local gameIds = {
    [6708206173] = "Rate My Avatar"
}

local WelcomeParagraph = MTab:CreateParagraph({
    Title = 'Welcome, <font color="#92fb13">'.. player.Name .. '</font>',
    Content = "Welcome to SigmaBypasser, the top tool for advanced chat filter bypassing. Say what you want, when you want, without limits. Enjoy, " .. player.Name .. "."
})

local SafeMode = SNTab:CreateToggle({
    Name = "Safe Mode",
    CurrentValue = false,
    Flag = "SafeToggle",
    Callback = function(Value)
        safeBool = Value
    end
})

local UnloadGUI = SNTab:CreateButton({
    Name = "Unload GUI",
    Callback = function()
        if not safeBool then
            Rayfield:Destroy()
        else
            Rayfield:Notify({
                Title = "Safe Mode",
                Content = "Safe Mode is on, to unload the GUI, please disable.",
                Duration = 6.5,
                Image = 4483362458,
                Actions = {
                    Ignore = {
                        Name = "Okay!",
                        Callback = function()
                            warn("Safe Mode is on, to unload the GUI, please disable.")
                        end
                    }
                }
            })
        end
    end
})

local changeTheme = SNTab:CreateDropdown({
    Name = "Change Theme",
    Options = {"Default", "Light", "Green", "DarkBlue", "Amethyst", "Bloom", "Ocean", "AmberGlow", "Serenity"},
    CurrentOption = {"Default"},
    Flag = "ThemesDropdown",
    Callback = function(CurrentOption)
        Window.ModifyTheme(CurrentOption[1])
    end
})

local rbxChatSelected = true

local minishakk = CRTab:CreateLabel("@minishakk - Script Developer")
local shadow62 = CRTab:CreateLabel("@shadow62 - Tag Detection")
local sakupenny = CRTab:CreateLabel("@sakupenny - Jerk Off Tool")
local gtxsupra_ = CRTab:CreateLabel("@gtxsupra_ - Jerk Off Tool | Auto Bypass")

local creditsDivider = CRTab:CreateDivider()

local specialThanks = CRTab:CreateParagraph({
    Title = "Special Thanks",
    Content = "Special thanks to @Anna for the inspiration. Without her, SigmaBypasser™ could've never existed."
})

local EnglishMapping = {
    a = "󠀀a󠀀", b = "󠀀b", c = "c󠀀", d = "󠀀d", e = "e󠀀", f = "󠀀f󠀀", g = "g󠀀󠀀", h = "󠀀h",
    i = "󠀀󠀀i󠀀󠀀", j = "j󠀀", k = "󠀀k", l = "l󠀀", m = "󠀀m", n = "󠀀n󠀀", o = "o󠀀", p = "󠀀p",
    q = "q", r = "󠀀r", s = "󠀀s󠀀", t = "󠀀t", u = "u󠀀", v = "v󠀀", w = "󠀀w", x = "x",
    y = "y󠀀", z = "z", A = "A", B = "B", C = "󠀀C", D = "󠀀D", E = "E", F = "󠀀F󠀀󠀀",
    G = "󠀀G", H = "H", I = "I", J = "J", K = "󠀀K", L = "L", M = "M", N = "N",
    O = "O󠀀", P = "󠀀P", Q = "Q", R = "R", S = "S", T = "T", U = "U󠀀", V = "V",
    W = "W", X = "X", Y = "Y", Z = "Z"
}

local LanguageMapping = {
    a = "󠀂а", b = "b󠀗", c = "󠀀c", d = "󠀒d󠀗", e = "е", f = "󠀂f󠀗", g = "g", h = "󠀀һ󠀀",
    i = "і󠀀", j = "ј", k = "󠀗k", l = "l", m = "m", n = "n󠀇", o = "о󠀇", p = "󠀄p",
    q = "ԛ", r = "r󠀇󠀇", s = "󠀀ѕ", t = "󠀗t", u = "u󠀗", v = "v", w = "w", x = "х",
    y = "󠀀у󠀀", z = "z", A = "󠀀А󠀀", B = "󠀀В󠀀", C = "󠀀С󠀀", D = "D󠀀", E = "Е", F = "󠀒F󠀀",
    G = "󠀀G󠀀", H = "Н󠀀", I = "I󠀀", J = "Ј", K = "К󠀒", L = "L", M = "М", N = "󠀒N",
    O = "O", P = "Р", Q = "Ԛ", R = "R", S = "Ѕ󠀀󠀀", T = "󠀀Т", U = "U", V = "V",
    W = "W", X = "Х", Y = "Y", Z = "Z"
}

local UnlegitMapping = {
    a = "a󠀀", b = "b", c = "c", d = "d", e = "e", f = "f󠀀", g = "g", h = "h",
    i = "i󠀀󠀀", j = "j", k = "k", l = "I", m = "m", n = "n", o = "o", p = "p",
    q = "ԛ", r = "r", s = "s", t = "t", u = "u", v = "v", w = "w", x = "x",
    y = "y", z = "z", A = "A", B = "B", C = "C", D = "D", E = "E", F = "F",
    G = "G", H = "H", I = "I", J = "J", K = "К", L = "L", M = "M", N = "N",
    O = "O", P = "P", Q = "Q", R = "R", S = "S", T = "T", U = "U", V = "V",
    W = "W", X = "X", Y = "Y", Z = "Z"
}

local CircleMapping = {
    a = "🅐", b = "🅑", c = "🅒", d = "🅓", e = "🅔", f = "🅕", g = "🅖", h = "🅗",
    i = "🅘", j = "🅙", k = "🅚", l = "🅛", m = "🅜", n = "🅝", o = "🅞", p = "🅟",
    q = "🅠", r = "🅡", s = "🅢", t = "🅣", u = "🅤", v = "🅥", w = "🅦", x = "🅧",
    y = "🅨", z = "🅩", A = "🅐", B = "🅑", C = "🅒", D = "🅓", E = "🅔", F = "🅕",
    G = "🅖", H = "🅗", I = "🅘", J = "🅙", K = "🅚", L = "🅛", M = "🅜", N = "🅝",
    O = "🅞", P = "🅟", Q = "🅠", R = "🅡", S = "🅢", T = "🅣", U = "🅤", V = "🅥",
    W = "🅦", X = "🅧", Y = "🅨", Z = "🅩"
}

local DiacriticsMapping = {
    a = "ấ", b = "ɓ", c = "ć", d = "ḓ", e = "ệ", f = "ƒ", g = "ǵ", h = "ħ",
    i = "į", j = "ǰ", k = "ķ", l = "ŀ", m = "ṃ", n = "ñ", o = "ố", p = "ṗ",
    q = "ʠ", r = "ř", s = "ş", t = "ť", u = "ų", v = "ṽ", w = "ẇ", x = "ẋ",
    y = "ỳ", z = "ž", A = "Ấ", B = "Ḅ", C = "Ć", D = "Ḓ", E = "Ệ", F = "Ƒ",
    G = "Ǵ", H = "Ħ", I = "Į", J = "ǰ", K = "Ķ", L = "Ŀ", M = "Ṃ", N = "Ń",
    O = "Ố", P = "Ṗ", Q = "Q̇", R = "Ř", S = "Ş", T = "Ť", U = "Ų", V = "Ṽ",
    W = "Ẉ", X = "Ẍ", Y = "Ỳ", Z = "Ž"
}

local UnderlineMapping = {
    a = "a̳", b = "b̳", c = "c̳", d = "d̳", e = "e̳", f = "f̳", g = "g̳", h = "h̳",
    i = "i̳", j = "j̳", k = "k̳", l = "l̳", m = "m̳", n = "n̳", o = "o̳", p = "p̳",
    q = "q̳", r = "r̳", s = "s̳", t = "t̳", u = "u̳", v = "v̳", w = "w̳", x = "x̳",
    y = "y̳", z = "z̳", A = "A̳", B = "B̳", C = "C̳", D = "D̳", E = "E̳", F = "F̳",
    G = "G̳", H = "H̳", I = "I̳", J = "J̳", K = "K̳", L = "L̳", M = "M̳", N = "N̳",
    O = "O̳", P = "P̳", Q = "Q̳", R = "R̳", S = "S̳", T = "T̳", U = "U̳", V = "V̳",
    W = "W̳", X = "X̳", Y = "Y̳", Z = "Z̳"
}

local ArrowMapping = {
    a = "a>", b = "b>", c = "c>", d = "d>", e = "e>", f = "f>", g = "g>", h = "h>",
    i = "i>", j = "j>", k = "k>", l = "l>", m = "m>", n = "n>", o = "o>", p = "p>",
    q = "q>", r = "r>", s = "s>", t = "t>", u = "u>", v = "v>", w = "w>", x = "x>",
    y = "y>", z = "z>", A = "A>", B = "B>", C = "C>", D = "D>", E = "E>", F = "F>",
    G = "G>", H = "H>", I = "I>", J = "J>", K = "K>", L = "L>", M = "M>", N = "N>",
    O = "O>", P = "P>", Q = "Q>", R = "R>", S = "S>", T = "T>", U = "U>", V = "V>",
    W = "W>", X = "X>", Y = "Y>", Z = "Z>"
}

local methods = {
    English = EnglishMapping,
    Language = LanguageMapping,
    Unlegit = UnlegitMapping,
    Circle = CircleMapping,
    Diacritics = DiacriticsMapping,
    Underline = UnderlineMapping,
    Arrow = ArrowMapping
}

local currentMethod = "Unlegit"

local ChatBypassTextbox = MTab:CreateInput({
    Name = "Chat Bypass",
    Text = "",
    PlaceholderText = "Enter message to bypass",
    Flag = "ChatBypassTextbox",
    Callback = function(Text)
        bypassText = Text
    end
})

local function bypassMessage(message)
    local selectedMapping = methods[currentMethod]
    local bypassedMessage = ""
    local wordCount = 0
    
    for i = 1, #message do
        local char = message:sub(i, i)
        bypassedMessage = bypassedMessage .. (selectedMapping[char] or char)
        
        if char == " " then
            wordCount = wordCount + 1
            if wordCount % 6 == 0 then
                bypassedMessage = bypassedMessage .. " "
            end
        end
    end

    bypassedMessage = bypassedMessage:gsub(" ", function()
        return math.random(2) == 7 and "" or "" or ""
    end)

    local actualWordCount = 0
    bypassedMessage = bypassedMessage:gsub("[]", function(fakeSpace)
        actualWordCount = actualWordCount + 1
        if actualWordCount % 7 == 0 then
            return " "
        else
            return fakeSpace
        end
    end)

    bypassedMessage = "󠀀" .. bypassedMessage .. "󠀀"

    return bypassedMessage
end

local sendMessage = function(message)
    local Chat = game:GetService("Chat")
    local success, filteredMessage = pcall(function()
        return Chat:FilterStringForBroadcast(message, player)
    end)

    if not success then
        warn("Filtering failed. Proceeding without tag detection.")
        filteredMessage = message
    end

    local function normalizeString(str)
        return str:gsub("%s+", ""):lower()
    end

    local isTagged = normalizeString(filteredMessage) ~= normalizeString(message)

    if TextChatService then
        local textChannels = TextChatService:FindFirstChild("TextChannels")
        if textChannels then
            local textChannel = textChannels:WaitForChild("RBXGeneral")
            if textChannel then
                if tagBool and isTagged then
                    textChannel:DisplaySystemMessage('<font color="#FF7F50">[SigmaBypasser] Detected tags!</font>')
                else
                    textChannel:SendAsync(message)
                end
                return
            else
                warn("No suitable text channel found in TextChatService. Falling back to legacy chat.")
                if ReplicatedStorage:FindFirstChild("DefaultChatSystemChatEvents") then
                    if tagBool and isTagged then
                        game.StarterGui:SetCore("ChatMakeSystemMessage",
                            {Text = "[SigmaBypasser] Detected tags!",
                            Color = Color3.fromRGB(255, 127, 80),
                            font = Enum.Font.SourceSansBold
                        })
                    else
                        ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(message, "All")
                    end
                else
                    warn("Legacy chat events are not available.")
                end
            end
        else
            warn("TextChannels not found in TextChatService. Falling back to legacy chat.")
            if ReplicatedStorage:FindFirstChild("DefaultChatSystemChatEvents") then
                if tagBool and isTagged then
                    game.StarterGui:SetCore("ChatMakeSystemMessage",
                        {Text = "[SigmaBypasser] Detected tags!",
                        Color = Color3.fromRGB(255, 127, 80),
                        font = Enum.Font.SourceSansBold
                    })
                else
                    ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(message, "All")
                end
            else
                warn("Legacy chat events are not available.")
            end
        end
    elseif ReplicatedStorage:FindFirstChild("DefaultChatSystemChatEvents") then
        if tagBool and isTagged then
            game.StarterGui:SetCore("ChatMakeSystemMessage",
                {Text = "[SigmaBypasser] Detected tags!",
                Color = Color3.fromRGB(255, 127, 80),
                font = Enum.Font.SourceSansBold
            })
        else
            ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(message, "All")
        end
    else
         warn("Legacy chat events are not available.")
    end
end

local SendButton = MTab:CreateButton({
    Name = "Send",
    Callback = function()
        if bypassText ~= "" then
            local bypassedText = bypassMessage(bypassText)

            sendMessage(bypassedText)
        else
            Rayfield:Notify({
                Title = "No message specified.",
                Content = "You didn't enter a message to bypass.",
                Duration = 6.5,
                Image = 4483362458
            })
        end
    end
})

local fixBypasses = MTab:CreateButton({
    Name = "Fix Bypasses",
    Callback = function()
        local function generateString(length)
            local chars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789"
            local generatedString = ""
            
            for i = 1, length do
                local randomIndex = math.random(1, #chars)
                generatedString = generatedString .. chars:sub(randomIndex, randomIndex)
            end
            
            return generatedString
        end

        local messageSent = game.Players:Chat("/e " .. generateString(85))

        print(tostring(messageSent))
    end
})

local premDivider = MTab:CreateDivider()

local PremiumFeatures = MTab:CreateParagraph({
    Title = '<font color="#ffbf00">Freemium</font> Features',
    Content = "Enjoy our brand new premium features, all for free. These include, Tag Detection, Auto Bypass, and different methods."
})

local AutoBypassToggle = MTab:CreateToggle({
    Name = "Auto Bypass",
    CurrentValue = false,
    Flag = "AutoBypassToggle",
    Callback = function(Value)
        autoBool = Value
        local TextBox = nil
        local ScreenGui = nil
        local inputConnection = nil

        if autoBool then
            inputConnection = UserInputService.InputBegan:Connect(function(input, gameProcessed)
                if input.KeyCode == Enum.KeyCode.Slash then
                    if not TextBox then
                        local ScreenGui = Instance.new("ScreenGui")
                        local Frame = Instance.new("Frame")
                        local UICorner = Instance.new("UICorner")
                        local TextBox = Instance.new("TextBox")
                        local UICorner_2 = Instance.new("UICorner")
                        local Frame_2 = Instance.new("Frame")
                        local UICorner_3 = Instance.new("UICorner")
                        local TextLabel = Instance.new("TextLabel")
                        
                        ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
                        
                        -- Frame Özellikleri
                        Frame.Parent = ScreenGui
                        Frame.BackgroundColor3 = Color3.fromRGB(31, 31, 31)
                        Frame.BorderColor3 = Color3.fromRGB(0, 0, 0)
                        Frame.BorderSizePixel = 0
                        Frame.AnchorPoint = Vector2.new(0.5, 0.5) -- Ortalamak için gerekli
                        Frame.Position = UDim2.new(0.5, 0, 0.55, 0) -- Ortada, biraz aşağı
                        Frame.Size = UDim2.new(0, 322, 0, 37)
                        
                        UICorner.Parent = Frame
                        
                        -- TextBox Özellikleri
                        TextBox.Parent = Frame
                        TextBox.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
                        TextBox.BorderColor3 = Color3.fromRGB(0, 0, 0)
                        TextBox.BorderSizePixel = 0
                        TextBox.Position = UDim2.new(0.016, 0, 0.112, 0)
                        TextBox.Size = UDim2.new(0, 312, 0, 29)
                        TextBox.Font = Enum.Font.SourceSans
                        TextBox.PlaceholderText = "Type your message here..."
                        TextBox.PlaceholderColor3 = Color3.fromRGB(60, 60, 60)
                        TextBox.Text = ""
                        TextBox.TextColor3 = Color3.fromRGB(255, 255, 255)
                        TextBox.TextSize = 18
                        TextBox.TextXAlignment = Enum.TextXAlignment.Left
                        
                        UICorner_2.CornerRadius = UDim.new(0, 4)
                        UICorner_2.Parent = TextBox
                        
                        -- Frame_2 Özellikleri
                        Frame_2.Parent = Frame
                        Frame_2.BackgroundColor3 = Color3.fromRGB(59, 59, 59)
                        Frame_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
                        Frame_2.BorderSizePixel = 0
                        Frame_2.Position = UDim2.new(0.835, 0, 0.112, 0)
                        Frame_2.Size = UDim2.new(0, 49, 0, 29)
                        
                        UICorner_3.Parent = Frame_2
                        
                        -- TextLabel Özellikleri
                        TextLabel.Parent = Frame_2
                        TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                        TextLabel.BackgroundTransparency = 1
                        TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
                        TextLabel.BorderSizePixel = 0
                        TextLabel.Position = UDim2.new(-1.552, 0, -0.366, 0)
                        TextLabel.Size = UDim2.new(0, 200, 0, 50)
                        TextLabel.Font = Enum.Font.FredokaOne
                        TextLabel.Text = "/"
                        TextLabel.TextColor3 = Color3.fromRGB(214, 215, 213)
                        TextLabel.TextSize = 14                        
                        local SlideInInfo = TweenInfo.new(
                                                            0.5,
                                                            Enum.EasingStyle.Quad,
                                                            Enum.EasingDirection.Out
                                                        )

                        local SlideOutInfo = TweenInfo.new(
                                                            0.5,
                                                            Enum.EasingStyle.Quad,
                                                            Enum.EasingDirection.In
                                                        )

                        Frame.Position = UDim2.new(0.5, 0, 1.5, 0)

                        local isOpen = false
                        local function slideIn()
                            local slideInTween = game.TweenService:Create(Frame, SlideInInfo, { Position = UDim2.new(0.5, 0, 0.9, 0) })
                            slideInTween:Play()
                        end

                        local function slideOut()
                            local slideOutTween = game.TweenService:Create(Frame, SlideOutInfo, { Position = UDim2.new(0.5, 0, 1.5, 0) })
                            slideOutTween:Play()
                        end
                        slideIn()

                        task.wait(0.01)
                        TextBox:CaptureFocus()

                        TextBox.FocusLost:Connect(function()
                            slideOut()
                            if autoBool then
                                local rizz = bypassMessage(TextBox.Text)
                                sendMessage(rizz)
                            end
                            if not autoBool then
                                ScreenGui:Destroy()
                                ScreenGui = nil
                                TextBox = nil

                                inputConnection:Disconnect()
                                inputConnection = nil
                            end
                            if ScreenGui then
                                ScreenGui:Destroy()
                                ScreenGui = nil
                                TextBox = nil
                            end
                        end)
                    end
                end
            end)
        else
            if inputConnection then
                inputConnection:Disconnect()
                inputConnection = nil
            end
            if ScreenGui then
                ScreenGui:Destroy()
                ScreenGui = nil
                TextBox = nil
            end
        end
    end
})

local tagDetection = MTab:CreateToggle({
    Name = "Tag Detection",
    CurrentValue = true,
    Flag = "TagToggle",
    Callback = function(Value)
        tagBool = Value

        if tagBool then
            Rayfield:Notify({
                Title = "Tag Detection",
                Content = "You have enabled our premium Tag Detection feature, enjoy.",
                Duration = 6.5,
                Image = 4483362458
            })  
        end
    end
})

local MethodsDropdown = MTab:CreateDropdown({
    Name = "Methods",
    Options = {"English", "Language", "Unlegit", "Circle", "Diacritics", "Underline", "Arrow"},
    CurrentOption = {"English"},
    MultipleOptions = false,
    Flag = "MethodsDropdown",
    Callback = function(CurrentOption)
        currentMethod = CurrentOption[1]
    end
})

local feDivider = MTab:CreateDivider()

local feParagraph = MTab:CreateParagraph({
    Title = '<font color="#00a2ff">FE</font> Tools',
    Content = "Experience our FE tools integrated within SigmaBypasser. For now, these only include Sex Tools (v2)."
})

local teleportTarget = ""
local spamEnabled = false
local spamInterval = 0.01
local chatInterval = 1

local TeleportTextbox = MTab:CreateInput({
    Name = "Sex Tools [Target]",
    Text = "",
    PlaceholderText = "Enter Player Username/Display Name.",
    Flag = "TeleportTextbox",
    Callback = function(text)
        teleportTarget = text
    end
})

local function findPlayerByNameOrDisplayName(name)
    for _, player in pairs(game.Players:GetPlayers()) do
        if player.Name == name or player.DisplayName == name then
            return player
        end
    end
    return nil
end

local function teleportPlayer(targetName)
    local targetPlayer = findPlayerByNameOrDisplayName(targetName)

    if targetPlayer and targetPlayer.Character then
        local playerCharacter = player.Character
        local playerHRP = playerCharacter and playerCharacter:FindFirstChild("HumanoidRootPart")
        local targetCharacter = targetPlayer.Character
        local targetHRP = targetCharacter:FindFirstChild("HumanoidRootPart")

        if playerHRP and targetHRP then
            local initialPosition = targetHRP.Position - targetHRP.CFrame.LookVector * 0.1
            playerHRP.CFrame = CFrame.new(initialPosition, targetHRP.Position)

            local humanoid = playerCharacter:FindFirstChild("Humanoid")
            if humanoid then
                humanoid.Jump = true

                local emoteAnimation = Instance.new("Animation")
                emoteAnimation.AnimationId = "rbxassetid://148840371"
                local emoteTrack = humanoid:LoadAnimation(emoteAnimation)
                emoteTrack:Play()
                emoteTrack:AdjustSpeed(2)
            end

            local movingForward = false

            while spamEnabled do
                task.wait(0.02)

                local targetPosition = targetHRP.Position
                local moveDirection = movingForward and targetHRP.CFrame.LookVector or -targetHRP.CFrame.LookVector
                local offsetPosition = targetPosition + moveDirection * 0.075

                playerHRP.CFrame = CFrame.new(offsetPosition, targetHRP.Position)

                movingForward = not movingForward
            end
        end
    end
end

local SpamToggle = MTab:CreateToggle({
    Name = "Bang",
    Flag = "SpamToggle",
    Callback = function(state)
        spamEnabled = state
        if spamEnabled then
            task.spawn(function()
                while spamEnabled do
                    if teleportTarget ~= "" then
                        teleportPlayer(teleportTarget)
                    end
                    task.wait(spamInterval)
                end
            end)

            if chatBool then
                task.spawn(function()
                    local spamChat = {
                        "ughhh~󠀇SH󠀇󠀇I󠀇T󠀇imSOCLOSETOC󠀇UM󠀇MIN󠀇G󠀇",
                        "󠀇NAHWERENOTDONE󠀇󠀇BI󠀇TC󠀇󠀇H󠀇ROUND2󠀇", 
                        "󠀇AHHHHH󠀇FU󠀇󠀇C󠀇K󠀇IMGONNA󠀇󠀇C󠀇U󠀇M󠀇󠀇!!!󠀇",
                        "󠀇*󠀇CUMGOES󠀇F󠀇U󠀇C󠀇K󠀇󠀇IN󠀇󠀇G󠀇EVERYWHERE󠀇*󠀇",
                        "ohhh-*s󠀇pl󠀇at󠀇severywhere* :3",
                        "ng󠀀gh󠀀h~t󠀀hisfe󠀀elsS󠀀O󠀀Ogood"
                    }

                    while spamEnabled do
                        local randomIndex = math.random(1, #spamChat)
                        local randomValue = spamChat[randomIndex]

                        sendMessage(randomValue)
                        task.wait(chatInterval)
                    end
                end)
            end
        end
    end
})

local feDivider2 = MTab:CreateDivider()

local SpeedOfJerk = 16

local jerkOff = MTab:CreateButton({
    Name = "Jerk-Off (credits to @sakupenny)",
    Callback = function()
        if jerkBool then
            while true do
                task.wait(0.001)
                local KeepOnDeath = true

                --// player defintion
                local Player = game.Players.LocalPlayer
                local Character = Player.Character or Player.CharacterAdded:Wait()
                local Humanoid = Character:WaitForChild("Humanoid", 1)
                local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart", 1) or Character.PrimaryPart

                --// check if not R6
                if not Character:FindFirstChild("Torso") then
                    warn("Must be R6")
                    return
                end

                --// check if already executed
                if getgenv().JerkOffExecuted then
                    warn("Already executed")
                    return
                end

                getgenv().JerkOffExecuted = true

                --// the animations of the script
                local MAIN_ANIMATIONS = {
                    JERK_OFF = "rbxassetid://99198989",
                    CLOSER_HANDS = "rbxassetid://168086975",
                }

                --// this is a boolean named "JerkingOff"🤯
                local JerkingOff = false

                --// making the tool in 
                local JerkTool = Instance.new("Tool")
                JerkTool.Name = "Jerk Off"
                JerkTool.RequiresHandle = false
                JerkTool.Parent = game:GetService("ReplicatedStorage")

                --// on respawn
                Player.CharacterAdded:Connect(function()
                    --// redefine character on respawn
                    Character = Player.Character
                    Humanoid = Character:WaitForChild("Humanoid", 1)
                    HumanoidRootPart = Character:WaitForChild("HumanoidRootPart", 1) or Character.PrimaryPart

                    --// tool give
                    if KeepOnDeath then
                        --// clones the tool from replicatedStorage
                        local new_tool = JerkTool:Clone()
                        new_tool.Parent = Player.Backpack
                        
                        --// set JerkingOff to true or false based on if it's equipped
                        new_tool.Equipped:Connect(function()
                            JerkingOff = true
                        end)

                        new_tool.Unequipped:Connect(function()
                            JerkingOff = false
                        end)
                    end

                    --// disable on death
                    Humanoid.Died:Connect(function()
                        JerkingOff = false
                        if not KeepOnDeath then
                            getgenv().JerkOffExecuted = false
                        end
                    end)
                end)

                --// give on execute
                local new_tool = JerkTool:Clone()
                new_tool.Parent = Player.Backpack

                --// set JerkingOff to true or false based on if it's equipped
                new_tool.Equipped:Connect(function()
                    JerkingOff = true
                end)

                new_tool.Unequipped:Connect(function()
                    JerkingOff = false
                end)

                --// disable on death
                Humanoid.Died:Connect(function()
                    JerkingOff = false
                    if not KeepOnDeath then
                        getgenv().JerkOffExecuted = false
                    end
                end)

                --// main loop
                local jerkoffTrack
                local closerhandsTrack
                local setToOriginalValues = true

                game:GetService("RunService").RenderStepped:Connect(function()
                    if not Humanoid then
                        return --// exit if Humanoid is not defined
                    end
                    if JerkingOff then
                        setToOriginalValues = true
                        Humanoid.WalkSpeed = 0 --// set walk speed to 0 while jerking off
                        Humanoid.JumpPower = 0 --// set jump power to 0 while jerking off

                        --// check if jerkoffTrack is not playing
                        if not jerkoffTrack then
                            local anim = Instance.new("Animation")
                            anim.AnimationId = MAIN_ANIMATIONS.JERK_OFF
                            jerkoffTrack = Humanoid:LoadAnimation(anim)
                            jerkoffTrack.Looped = true
                            jerkoffTrack:Play()
                            while true do
                                task.wait(0.5)
                                jerkoffTrack:AdjustSpeed(SpeedOfJerk)
                            end
                        end
                    
                        --// check if closerhandsTrack is not playing
                        if not closerhandsTrack then
                            local anim = Instance.new("Animation")
                            anim.AnimationId = MAIN_ANIMATIONS.CLOSER_HANDS
                            closerhandsTrack = Humanoid:LoadAnimation(anim)
                            closerhandsTrack:Play()
                            closerhandsTrack:AdjustSpeed(SpeedOfJerk)
                        end
                    elseif setToOriginalValues then
                        setToOriginalValues = false
                        Humanoid.WalkSpeed = 16 --// reset walk speed
                        Humanoid.JumpPower = 50 --// reset jump power
                        --// stop animations if they are playing
                        if jerkoffTrack then
                            jerkoffTrack:Stop()
                            jerkoffTrack = nil
                        end
                        if closerhandsTrack then
                            closerhandsTrack:Stop()
                            closerhandsTrack = nil
                        end
                    end
                end)
            end
        end
    end
})

local jerkSpeedSlider = MTab:CreateSlider({
    Name = "Jerk-Off Speed (credits to @gtxsupra_)",
    Range = {0, 20},
    Increment = 1,
    CurrentValue = 16,
    Callback = function(CurrentValue)
        SpeedOfJerk = CurrentValue
    end
})

local seperatorSpace = MTab:CreateSection("")

local seperator = MTab:CreateSection("Suggested Bypasses")

local dogshitScript = {
    MTab:CreateButton({
        Name = "dogshit bypass sigmabypasser owns you",
        Callback = function()
            sendMessage("󠀀d󠀀o󠀀gsh󠀀i󠀀t󠀀byp󠀀as󠀀ssigma󠀀bypas󠀀serownsyou")
        end
    }),

    CTab:CreateButton({
        Name = "dogshit bypass sigmabypasser owns you",
        Callback = function()
            sendMessage("󠀀d󠀀o󠀀gsh󠀀i󠀀t󠀀byp󠀀as󠀀ssigma󠀀bypas󠀀serownsyou")
        end
    })
}

local girlsPussy = {
    MTab:CreateButton({ 
        Name = "(thinks in mind) * oh how i want to absolutely destroy that girls pussy.. *", 
        Callback = function()
            sendMessage("(thinksinmind)*ohhowiwanttoabsolutelyde󠀀󠀀str󠀀󠀀oy󠀀that󠀀󠀀g󠀀󠀀ir󠀀󠀀ls󠀀󠀀󠀀󠀀p󠀀󠀀u󠀀s󠀀󠀀󠀀s󠀀y󠀀󠀀󠀀.󠀀.󠀀󠀀󠀀*")
        end
    }),

    RPTab:CreateButton({ 
        Name = "(thinks in mind) * oh how i want to absolutely destroy that girls pussy.. *", 
        Callback = function()
            sendMessage("(thinksinmind)*ohhowiwanttoabsolutelyde󠀀󠀀str󠀀󠀀oy󠀀that󠀀󠀀g󠀀󠀀ir󠀀󠀀ls󠀀󠀀󠀀󠀀p󠀀󠀀u󠀀s󠀀󠀀󠀀s󠀀y󠀀󠀀󠀀.󠀀.󠀀󠀀󠀀*")
        end
    })
}


local whippingCock = {
    MTab:CreateButton({
        Name = "*starts whipping my cock out slowly to the point u wouldnt notice*",
        Callback = function()
            sendMessage("*starts󠀀w󠀀󠀀hip󠀀󠀀p󠀀󠀀i󠀀󠀀n󠀀󠀀g󠀀󠀀my󠀀󠀀c󠀀󠀀o󠀀󠀀c󠀀k󠀀outslowlytothe󠀀po󠀀󠀀i󠀀nt󠀀󠀀u󠀀wouldntnotice*")
        end
    }),


    RPTab:CreateButton({
        Name = "*starts whipping my cock out slowly to the point u wouldnt notice*",
        Callback = function()
            sendMessage("*starts󠀀w󠀀󠀀hip󠀀󠀀p󠀀󠀀i󠀀󠀀n󠀀󠀀g󠀀󠀀my󠀀󠀀c󠀀󠀀o󠀀󠀀c󠀀k󠀀outslowlytothe󠀀po󠀀󠀀i󠀀nt󠀀󠀀u󠀀wouldntnotice*")
        end
    })
}


local wannaHaveSex = {
    MTab:CreateButton({
        Name = "wanna have sex?",
        Callback = function()
            sendMessage("wanna󠀀have󠀀󠀀󠀀s󠀀󠀀󠀀󠀀e󠀀󠀀󠀀x󠀀󠀀?")
        end
    }),
    
    STab:CreateButton({
        Name = "wanna have sex?",
        Callback = function()
            sendMessage("wanna󠀀have󠀀󠀀󠀀s󠀀󠀀󠀀󠀀e󠀀󠀀󠀀x󠀀󠀀?")
        end
    })
}


local gingerblox = {
    MTab:CreateButton({
        Name = "we should all suck gingerblox huge cock",
        Callback = function()
            sendMessage("weshouldalls󠀀󠀀uck󠀀gin󠀀ger󠀀bloxhug󠀀e󠀀c󠀀󠀀oc󠀀󠀀k󠀀󠀀󠀀")
        end
    }),


    CTab:CreateButton({
        Name = "we should all suck gingerblox huge cock",
        Callback = function()
            sendMessage("weshouldalls󠀀󠀀uck󠀀gin󠀀ger󠀀bloxhug󠀀e󠀀c󠀀󠀀oc󠀀󠀀k󠀀󠀀󠀀")
        end
    })
}


local stfu = {
    MTab:CreateButton({
        Name = "shut the fuck up",
        Callback = function()
            sendMessage("󠀀sh󠀀󠀀󠀀󠀀utth󠀀e󠀀󠀀fu󠀀c󠀀k󠀀󠀀up")
        end
    }),


    CTab:CreateButton({
        Name = "shut the fuck up",
        Callback = function()
            sendMessage("󠀀sh󠀀󠀀󠀀󠀀utth󠀀e󠀀󠀀fu󠀀c󠀀k󠀀󠀀up")
        end
    })
}


local rapeYou = {
    MTab:CreateButton({
        Name = "i will rape you",
        Callback = function()
            sendMessage("󠀀iw󠀀󠀀󠀀󠀀󠀀󠀀󠀀󠀀󠀀󠀀󠀀󠀀󠀀ill󠀀󠀀󠀀r󠀀󠀀ap󠀀󠀀eyou")
        end
    }),


    STab:CreateButton({
        Name = "i will rape you",
        Callback = function()
            sendMessage("󠀀iw󠀀󠀀󠀀󠀀󠀀󠀀󠀀󠀀󠀀󠀀󠀀󠀀󠀀ill󠀀󠀀󠀀r󠀀󠀀ap󠀀󠀀eyou")
        end
    })
}   


local soTrue = {
    MTab:CreateButton({
        Name = "that's actually so fucking true tho",
        Callback = function()
            sendMessage("󠀀󠀀that'sactu󠀀allyso󠀀fu󠀀󠀀c󠀀ki󠀀ng󠀀truetho󠀀")
        end
    }),


    CTab:CreateButton({
        Name = "that's actually so fucking true tho",
        Callback = function()
            sendMessage("󠀀󠀀that'sactu󠀀allyso󠀀fu󠀀󠀀c󠀀ki󠀀ng󠀀truetho󠀀")
        end
    })
}    


local penisErected = {
    MTab:CreateButton({
        Name = "my penis got erected seeing that",
        Callback = function()
            sendMessage("󠀀󠀀my󠀀󠀀󠀀󠀀󠀀pe󠀀󠀀nis󠀀got󠀀er󠀀ec󠀀ted󠀀seeingthat󠀀")
        end
    }),


    STab:CreateButton({
        Name = "my penis got erected seeing that",
        Callback = function()
            sendMessage("󠀀󠀀my󠀀󠀀󠀀󠀀󠀀pe󠀀󠀀nis󠀀got󠀀er󠀀ec󠀀ted󠀀seeingthat󠀀")
        end
    })
}

local joinDiscord = CTab:CreateButton({
    Name = ".gg/yTx8r73wxm | team sigma bypasser!",
    Callback = function()
        sendMessage(".󠀀g󠀀g/󠀀󠀀y󠀀Tx8r7󠀀3󠀀󠀀w󠀀x󠀀m󠀀󠀀󠀀󠀀|󠀀team󠀀sigmabypasser!󠀀")
    end
})


local actuallyFucked = CTab:CreateButton({
    Name = "nah that's actually so fucked",
    Callback = function()
        sendMessage("󠀀nahthat'sactuallyso󠀀fu󠀀󠀀cke󠀀d󠀀")
    end
})


local fuckingInsane = CTab:CreateButton({
    Name = "omg that's fucking insane lol",
    Callback = function()
        sendMessage("󠀀󠀀󠀀omgthat's󠀀󠀀󠀀f󠀀󠀀u󠀀󠀀c󠀀k󠀀󠀀󠀀󠀀i󠀀ng󠀀󠀀in󠀀sa󠀀ne󠀀lol󠀀󠀀󠀀")
    end
})


local fatBitch = CTab:CreateButton({
    Name = "you stupid fatass bitch",
    Callback = function()
        sendMessage("󠀀󠀀󠀀you󠀀stu󠀀pi󠀀d󠀀󠀀󠀀f󠀀󠀀at󠀀as󠀀s󠀀󠀀b󠀀i󠀀tc󠀀h󠀀󠀀󠀀󠀀")
    end
})

local hugeCock = RPTab:CreateButton({
    Name = "*whips huge cock across ur face*",
    Callback = function()
        sendMessage("*󠀀w󠀀hi󠀀󠀀ps󠀀󠀀huge󠀀󠀀󠀀c󠀀oc󠀀󠀀k󠀀󠀀across󠀀ur󠀀face*")
    end
})


local getsErected = RPTab:CreateButton({
    Name = "*gets so erected and hopes they dont notice*",
    Callback = function()
        sendMessage("*󠀀gets󠀀󠀀󠀀so󠀀󠀀󠀀󠀀ere󠀀c󠀀󠀀te󠀀d󠀀󠀀󠀀󠀀and󠀀󠀀󠀀hopes󠀀󠀀󠀀they󠀀󠀀󠀀dont󠀀󠀀󠀀notice󠀀*")
    end
})


local slipIn = RPTab:CreateButton({
    Name = "*slips it in*",
    Callback = function()
        sendMessage("*s󠀀lip󠀀s󠀀󠀀󠀀󠀀it󠀀󠀀󠀀󠀀i󠀀n*")
    end
})


local pornHub = WBTab:CreateButton({
    Name = "pornhub.com",
    Callback = function()
        sendMessage("󠀀p󠀀o󠀀rnh󠀀ub.com󠀀")
    end
})


local jerkMate = WBTab:CreateButton({
    Name = "jerkmate.com",
    Callback = function()
        sendMessage("je󠀀rkm󠀀at󠀀e.com")
    end
})

local onlyfans = WBTab:CreateButton({
    Name = "onlyfans.com/[USERNAME]",
    Callback = function()
        local username = player.Name
        sendMessage("o󠀀nl󠀀yfa󠀀ns.com/" .. username)
    end
})

local hugeAss = STab:CreateButton({
    Name = "damn girl lemme see that huge ass",
    Callback = function()
        sendMessage("󠀀da󠀀mngirllem󠀀meseethathug󠀀e󠀀a󠀀󠀀s󠀀󠀀s󠀀󠀀", "All")
    end
})

local rapingMinors = STab:CreateButton({
    Name = "i love raping minors",
    Callback = function()
        sendMessage("󠀀i󠀀lo󠀀ve󠀀󠀀r󠀀a󠀀p󠀀i󠀀n󠀀󠀀g󠀀󠀀m󠀀ino󠀀󠀀󠀀rs󠀀󠀀󠀀󠀀")
    end
})

local kys = WTab:CreateButton({
    Name = "kys",
    Callback = function()
        sendMessage("󠀀󠀀󠀀󠀀󠀀󠀀k󠀀󠀀󠀀󠀀󠀀у󠀀󠀀󠀀ѕ󠀀󠀀󠀀")
    end
})

local slut = WTab:CreateButton({
    Name = "slut",
    Callback = function()
        sendMessage("󠀀󠀀󠀀󠀀󠀀󠀀s󠀀󠀀I󠀀ut󠀀")
    end
})

local shit = WTab:CreateButton({
    Name = "shit",
    Callback = function()
        sendMessage("󠀀󠀀󠀀󠀀󠀀󠀀sһ󠀀󠀀і󠀀󠀀󠀀󠀀󠀀t󠀀󠀀󠀀")
    end
})

local ohFuck = WTab:CreateButton({
    Name = "oh fuck",
    Callback = function()
        sendMessage("󠀀󠀀oh󠀀f󠀀󠀀u󠀀c󠀀󠀀󠀀󠀀k󠀀󠀀")
    end
})

local bitch = WTab:CreateButton({
    Name = "bitch",
    Callback = function()
        sendMessage("󠀀󠀀󠀀b󠀀󠀀i󠀀t󠀀󠀀󠀀󠀀с󠀀󠀀һ󠀀󠀀󠀀")
    end
})

local retard = WTab:CreateButton({
    Name = "retard",
    Callback = function()
        sendMessage("󠀀󠀀󠀀r󠀀󠀀е󠀀󠀀t󠀀а󠀀r󠀀d")
    end
})

local cumslut = WTab:CreateButton({
    Name = "cumslut",
    Callback = function()
        sendMessage("󠀀󠀀cum󠀀s󠀀󠀀l󠀀u󠀀󠀀󠀀󠀀t󠀀󠀀")
    end
})

local fucktard = WTab:CreateButton({
    Name = "fucktard",
    Callback = function()
        sendMessage("󠀀󠀀󠀀f󠀀󠀀u󠀀󠀀󠀀c󠀀󠀀k󠀀t󠀀󠀀a󠀀r󠀀󠀀󠀀󠀀d󠀀󠀀")
    end
})

local dickhead = WTab:CreateButton({
    Name = "dickhead",
    Callback = function()
        sendMessage("󠀀󠀀d󠀀󠀀i󠀀󠀀󠀀c󠀀k󠀀󠀀he󠀀ad󠀀󠀀󠀀")
    end
})

local tittys = WTab:CreateButton({
    Name = "tittys",
    Callback = function()
        sendMessage("󠀀ti󠀀󠀀t󠀀󠀀ty󠀀󠀀s󠀀")
    end
})

local gotDiscord = CTab:CreateButton({
    Name = "u got discord?",
    Callback = function()
        sendMessage("󠀀ug󠀀ot󠀀di󠀀s󠀀c󠀀o󠀀r󠀀󠀀󠀀d󠀀?󠀀")
    end
})

local getOutTheWay = RTab:CreateButton({
    Name = "GET OUT THE FUCKING WAY",
    Callback = function()
        sendMessage("󠀀GET󠀀OUT󠀀THE󠀀󠀀F󠀀UC󠀀󠀀KI󠀀N󠀀G󠀀󠀀WAY󠀀")
    end
})

local getFucked = RTab:CreateButton({
    Name = "GGS GET FUCKED BUDDY",
    Callback = function()
        sendMessage("󠀀GG󠀀SGET󠀀F󠀀U󠀀CK󠀀󠀀E󠀀D󠀀BUD󠀀DY󠀀")
    end
})

local fuckingBlind = RTab:CreateButton({
    Name = "ARE YOU FUCKING BLIND?!",
    Callback = function()
        sendMessage("󠀀AREYOU󠀀F󠀀U󠀀CK󠀀󠀀I󠀀N󠀀GBLIND󠀀?!")
    end
})

local nobodyCares = RTab:CreateButton({
    Name = "NOBODY ACTUALLY GIVES A FUCK",
    Callback = function()
        sendMessage("󠀀NOBODYACTUALLYGIVESA󠀀F󠀀󠀀U󠀀C󠀀K󠀀󠀀")
    end
})

local thrustsCock = RPTab:CreateButton({
    Name = "*thrusts my throbbing hard cock into ur tight ass*",
    Callback = function()
        sendMessage("*󠀇thrustsmythrobbing󠀇ha󠀇rd󠀇󠀇󠀇c󠀇o󠀇󠀇c󠀇k󠀇󠀇intourtight󠀇a󠀇󠀇s󠀇s󠀇󠀇*")
    end
})

local hopOffDick = CTab:CreateButton({
    Name = "hop off my dick",
    Callback = function()
        sendMessage("hopoffmyd󠀇i󠀇󠀇c󠀇k󠀇󠀇")
    end
})

local scriptAss = CTab:CreateButton({
    Name = "that script is ass",
    Callback = function()
        sendMessage("thatsc󠀀riptisa󠀇s󠀀󠀀󠀇󠀀󠀇s󠀇󠀇")
    end
})

local realShit = CTab:CreateButton({
    Name = "real shit gang ❤️",
    Callback = function()
        sendMessage("󠀇real󠀇s󠀇h󠀇i󠀇t󠀇ga󠀇ng󠀇❤️󠀇")
    end
})

local pipeDown = CTab:CreateButton({
    Name = "pipe down and suck my dick",
    Callback = function()
        sendMessage("pipedownand󠀇s󠀇uc󠀇kmy󠀇d󠀇ic󠀇k󠀇󠀇")
    end
})

local fwThat = CTab:CreateButton({
    Name = "tbh i fuck with that",
    Callback = function()
        sendMessage("tbhifu󠀇ck󠀇wi󠀇t󠀇hth󠀇a󠀇t")
    end
})

local chillPill = CTab:CreateButton({
    Name = "take a fucking chill pill",
    Callback = function()
        sendMessage("takeafu󠀇ck󠀇i󠀇n󠀇gchi󠀇llpil󠀇l")
    end
})

local discordCom = WBTab:CreateButton({
    Name = "discord.com",
    Callback = function()
        local bypassedMessage = bypassMessage(" discord.com ")
        sendMessage(bypassedMessage)
    end
})

local babblingCunt = CTab:CreateButton({
    Name = "shut up you babbling cunt",
    Callback = function()
        sendMessage("󠀇󠀀shut󠀀up󠀀yo󠀀u󠀀bab󠀀bl󠀀ing󠀀c󠀀un󠀀t󠀀󠀇󠀇")
    end
})

local babblingCuntRage = RTab:CreateButton({
    Name = "OMG STFU YOU BABBLING CUNT!!",
    Callback = function()
        sendMessage("󠀇󠀀󠀀OMG󠀀󠀀ST󠀀FU󠀀󠀀YOU󠀀BA󠀀BBL󠀀ING󠀀󠀀CU󠀀N󠀀T!!󠀀󠀇")
    end
})

local eWebsite = WBTab:CreateButton({
    Name = "e621.net",
    Callback = function()
        sendMessage("󠀀e6󠀀21󠀀.n󠀀et󠀀")
    end
})

local feelsGood = STab:CreateButton({
    Name = "o-oh.. that pussy feels so good~",
    Callback = function()
        sendMessage("󠀀o-oh..th󠀀at󠀀p󠀀us󠀀󠀀s󠀀y󠀀󠀀feelssogo󠀀od~󠀀")
    end
})

local stfuSex = STab:CreateButton({
    Name = "how bout you stfu, and we have sex",
    Callback = function()
        sendMessage("howboutyou󠀀st󠀀f󠀀u,andwehave󠀀s󠀀e󠀀x󠀀")
    end
})

local kidCocaine = HTab:CreateButton({
    Name = "hey kid want some cocaine?",
    Callback = function()
        sendMessage("h󠀀eykidwa󠀀ntsomec󠀀oc󠀀󠀀ai󠀀ne󠀀?")
    end
})

local soHigh = HTab:CreateButton({
    Name = "ughh~ shit i'm so high rn..",
    Callback = function(Name)
        local bypassedMessage = bypassMessage("ughh~ shit i'm so high rn..")
        sendMessage(bypassedMessage)
    end
})

local freeDrugs = HTab:CreateButton({
    Name = "FREE DRUGS FOR ALL AGES!!",
    Callback = function(Name)
        local bypassedMessage = bypassMessage("F󠀀RE󠀀E D󠀀R󠀀UG󠀀S FOR ALL AG󠀀ES")
        sendMessage(bypassedMessage)
    end
})

local tightVagina = STab:CreateButton({
    Name = "ugh- why is ur vagina so TIGHT~",
    Callback = function(Name)
        local bypassedMessage = bypassMessage("ugh- why is u󠀀r v󠀀ag󠀀in󠀀a so T󠀀IG󠀀󠀀󠀀HT~")
        sendMessage(bypassedMessage)
    end
})

local pastedScript = CTab:CreateButton({
    Name = "shut yo pasted ass script up!",
    Callback = function(Name)
        local bypassedMessage = bypassMessage("shut yo p󠀀ast󠀀ed as󠀀s sc󠀀rip󠀀t up!")
        sendMessage(bypassedMessage)
    end
})

local currentGameName = gameIds[game.PlaceId]

if currentGameName then
    local BTab = Window:CreateTab("Booths", 88655102796043)

    local decalId = 0
    local newBoothText = ""

    function customizeBooth(boothText, decal)
        local args = {
            [1] = "Update",
            [2] = {
                ["DescriptionText"] = boothText,
                ["ImageId"] = decal
            }
        }

        game:GetService("ReplicatedStorage"):WaitForChild("CustomiseBooth"):FireServer(unpack(args))  
    end

    local boothsWarning = BTab:CreateParagraph({
        Title = "Booths",
        Content = "We have detected that you are playing Rate My Avatar! Here are some booth bypasses:"
    })

    local changeText = BTab:CreateInput({
        Name = "Booth Text",
        PlaceholderText = "Type Booth Text here.",
        Callback = function (Text)
            newBoothText = Text
        end
    })

    local changeImageId = BTab:CreateInput({
        Name = "Image ID",
        PlaceholderText = "Type Decal ID here.",
        Callback = function(Text)
            decalId = Text
        end
    })

    local updateBooth = BTab:CreateButton({
        Name = "Update Booth",
        Callback = function()
            customizeBooth(newBoothText, decalId)
        end
    })

    local boothSeperatorSpace = BTab:CreateSection("")

    local boothSeperator = BTab:CreateSection("Booth Bypasses")

    local fuckChatFilter = BTab:CreateButton({
        Name = "fuck the chat filter",
        Callback = function()
            customizeBooth("󠀀f󠀀u󠀀󠀀c󠀀k󠀀thechatfilter", decalId)
        end
    })

    local askDiddyAnything = BTab:CreateButton({
        Name = "ask diddy anything",
        Callback = function()
            customizeBooth("󠀀ask󠀀d󠀀id󠀀d󠀀y󠀀anything󠀀", decalId)
        end
    })

    local askRapist = BTab:CreateButton({
        Name = "ask a rapist anything",
        Callback = function()
            customizeBooth("askar󠀀a󠀀pis󠀀tanything", decalId)
        end
    })

    local askRaper = BTab:CreateButton({
        Name = "ask a raper anything",
        Callback = function()
            customizeBooth("󠀀aska󠀀ra󠀀p󠀀er󠀀anything󠀀", decalId)
        end
    })

    local kidsTouched = BTab:CreateButton({
        Name = "guessing how many kids you've fucked",
        Callback = function()
            customizeBooth("guessinghowmanykids you've󠀀fuc󠀀ke󠀀d󠀀󠀀", decalId)
        end
    })

    local freeDiddy = BTab:CreateButton({
        Name = "FREE DIDDY!",
        Callback = function()
            customizeBooth("FR󠀀EE󠀀DI󠀀DD󠀀Y󠀀!󠀀", decalId)
        end
    })
end
